/* By: Andrew Dennison and [ADD NAME IF MODIFIED]
 * Last modified: 17 NOV 23
*/

/* This is the default CSS generated when you make a new React app.
 * height and width being 100vh and 100vw are unnecessary except to 
 * allow percentage-based heights and widths to sub-children.
*/
.App {
  text-align: center;
  background-color: #282c34;
  height: 100vh;
  width: 100vw;
}

/* This is the default CSS generated when you make a new React app.
 * This class contains the entire Sudoku gameplay webpage.  
 * This class being a flexbox allows for the vertical alignment of the entire page.
*/
.App-header {
  margin: 0;
  font-size: calc(10px + 2vmin);
  height: 10vh;
  color: white;
  position: relative;
}

.help{
  position: absolute;
  top: 10%;
  right: 5%;

  height: 8vh;
  width: 15vh;
  font-size: 2em;
  
  border: 0.1em outset black;
  border-radius: 7px;
}

/* This is the styling for the main Sudoku header across the top of the App
*/
#Title{
  font-size: 200%;
  margin-bottom: 0%;
}
/* This is the styling for the text underneath the main Sudoku header at the top of the App
*/
.subTitle{
  font-size: 50%;
  margin-top: 0%;
}

/* This is the styline for everything below the header.
*/
.App-body {
  margin: 0;
  height: 85vh;
  display: flex;
  flex-direction: column;

  font-size: calc(10px + 2vmin);
  color: white;
}

/* This is the CSS for the primary display, which encompasses everything below the header
 * but above the input buttons.  This includes instructions, timer, errors, and board.
 * This is a child of App-body.
*/
.PrimaryDisplay{
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
}
/* the gameButton class is used to style each individual button throughout the Sudoku board.
 * These buttons are separate from inputButtons, or any other buttons laid out throughout the 
 * primary gameplay window.
 * Each gameButton will store one value and nothing else.
 */
.gameButton{
  height: 100%;
  width: 100%;
  font-size: 2em;
}

/* Styling for Sudoku buttons which are marked as errored
 * This styling will always be temporary and fade after three seconds
*/
.errorButton{
  height: 100%;
  width: 100%;
  font-size: 2em;
  background-color: red;
}

/* Styling for the overlay on top of each sudoku button
 * This formats the pencil marks when they have been applied
 * This is a parent container of at most, 9 divs
*/
.pencilButtonOverlay{
  height: 100%;
  width: 100%;
  font-size: 0.5em;
  position: absolute;
  top: 0;
  display: grid;
  
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  pointer-events: none;
  /*background-color: rgb(205, 209, 210);*/

  color: black;
}

/* Parent container for both a Sudoku button and overlay
 * Relative positioning to allow absolute positioning of pencilButtonOverlay
*/
.buttonSpace{
  width: 100%;
  height: 100%;
  position: relative;
}

/* This is the styling for game buttons which are added by default and thus cannot be altered.
*/
.defaultButton{
  height: 100%;
  width: 100%;
  font-size: 2em;
  background-color: #282c34;
  color: white;
}

/* The Board ID represents the div containing the entire Sudoku board, and nothing else.
 * The grid alignment allows for auto-resizing and alignment that is viewpoint-independent.
 */
#Board{
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  flex-grow: 2;
  
  min-width: 50vw;

  margin-top: 1%;
  margin-bottom: 1%;
  margin-left: 7%;
  margin-right: 10%;
}

/* This styling is applied to everything to the left of the board.  #BoardLeft is the parent div
*/
#BoardLeft{
  width: 15vw;
  margin-left: 2vw;
  margin-right: 1vw;
  font-size: 75%;

  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}

/* This styling is applied to everything to the right of the board.  #BoardRight is the parent div
*/
#BoardRight{
  margin-right: 5vw;
  margin-left: 5vw;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}

/* The gridSquare class represents each sub-grid on the sudoku board.  Each
 * element with a gridSquare class has 9 subchildren (1 for each possible input) 
 * Alternatively, a gridSquare represents the first dimension of the 2D array gridSquare
 * in board.js.
 * Each gridSquare, or sub-grid, is a grid parent element to 9 gameButtons.
 */
.gridSquare{
  display: grid;
  grid-template-columns: repeat(3, 1fr);

  border: 5px solid black;
  width: auto;
}

/* The ID InputButtons represents the div containing all nine input buttons below
 * the primary sudoku board.
 * This is the parent element to 9 inputButton elements, which are aligned horizonatlly as a flexbox.
*/
#Inputs{
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: stretch;

  flex-grow: 1;
}

/* An inputButton is the buttons labelled 1-9 below the board.  This CSS
 * styling applies to each individual button.
 */
.inputButton{
  height: 8vh;
  width: 8vh;
  font-size: 2em;
  
  border: 0.1em outset black;
  border-radius: 7px;
  margin: 1%;
}

/* An inputButton after it has been pressed.  This CSS
 * styling applies to each individual button.
 */
 .toggledInputButton{
  height: 8vh;
  width: 8vh;
  font-size: 2em;
  
  border: 0.1em inset black;
  background-color: rgb(103, 104, 105);
  border-radius: 7px;
  margin: 1%;
}

/* This is the styling for the div containing the options at the bottom of the app
 */
#Options{
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  margin-bottom: 1%;
}

/* This is the styling for the buttons contained in the Options div.
*/
.optionButton{
  border: 0.2em outset black;
  font-size: 2em;
  border-radius: 10px;
}

/* This is the style for the erase button when it is pressed
*/
.toggledOptionButton{
  border: 0.2em inset black;
  font-size: 2em;
  background-color: rgb(103, 104, 105);
  border-radius: 10px;
}

/* Styling for the div which contains the loss mechanisms
 * Also applies to winBox
*/
.loseBox{
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Styling for the div in loseBox containing the buttons
 * Also applies to winBox
*/
.lossOptions{
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
}

/* Styling for the buttons within lossOptions
 * Also applies to winBox
*/
.lossButton{
  height: 8vh;
  font-size: 2em;
  border: 0.1em outset black;
}